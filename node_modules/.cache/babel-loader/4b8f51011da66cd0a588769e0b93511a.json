{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Desktop\\\\sadna\\\\BiCompare\\\\src\\\\pages\\\\UploadFile.js\";\n// // import React, {useCallback} from 'react'\n// // import {useDropzone} from 'react-dropzone'\n// // function UploadFile() {\n// //   const onDrop = useCallback(acceptedFiles => {\n// //     // Do something with the files\n// //   }, [])\n// //   const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n// //   return (\n// //     <div {...getRootProps()}>\n// //       <input {...getInputProps()} />\n// //       {\n// //         isDragActive ?\n// //           <p>Drop the files here ...</p> :\n// //           <p>Drag 'n' drop some files here, or click to select files</p>\n// //       }\n// //     </div>\n// //   )\n// // }\n// // export default UploadFile\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadFile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData \n      const formData = new FormData(); // Update the formData object \n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file \n\n      console.log(this.state.selectedFile); // Request made to the backend api \n      // Send formData object \n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GeeksforGeeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UploadFile; // import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// function UploadFile() {\n//   const { register, handleSubmit } = useForm() \n//   const onSubmit = (data) => {\n//     console.log(data)\n//   }\n//   return (\n//      <form onSubmit={handleSubmit(onSubmit)}>\n//       <input {...register('value_name') } type=\"file\" name=\"picture\" />\n//       <button>Submit</button>\n//     </form>\n//   );\n// }\n// export default UploadFile;","map":{"version":3,"sources":["C:/Users/Dani/Desktop/sadna/BiCompare/src/pages/UploadFile.js"],"names":["React","Component","UploadFile","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AACA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BE,KAF+B,GAEvB;AAEN;AACAC,MAAAA,YAAY,EAAE;AAHR,KAFuB;;AAAA,SAS/BC,YAT+B,GAShBC,KAAK,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAZ8B;;AAAA,SAe/BC,YAf+B,GAehB,MAAM;AACnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFmB,CAInB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKV,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EALmB,CAWnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAZmB,CAcnB;AACA;AACD,KA/B8B;;AAAA,SAmC/Ba,QAnC+B,GAmCpB,MAAM;AACf,UAAI,KAAKd,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBc,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,yCACiB,GADjB,EAEG,KAAKf,KAAL,CAAWC,YAAX,CAAwBe,gBAAxB,CAAyCC,YAAzC,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAbD,MAaO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAzD8B;AAAA;;AA2D/BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKhB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAaG,KAAKO,QAAL,EAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA7E8B;;AAgFjC,eAAef,UAAf,C,CAKF;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// // import React, {useCallback} from 'react'\r\n// // import {useDropzone} from 'react-dropzone'\r\n\r\n// // function UploadFile() {\r\n// //   const onDrop = useCallback(acceptedFiles => {\r\n// //     // Do something with the files\r\n// //   }, [])\r\n// //   const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n// //   return (\r\n// //     <div {...getRootProps()}>\r\n// //       <input {...getInputProps()} />\r\n// //       {\r\n// //         isDragActive ?\r\n// //           <p>Drop the files here ...</p> :\r\n// //           <p>Drag 'n' drop some files here, or click to select files</p>\r\n// //       }\r\n// //     </div>\r\n// //   )\r\n// // }\r\n\r\n// // export default UploadFile\r\n\r\n\r\nimport React,{Component} from 'react'; \r\nclass UploadFile extends Component { \r\n\r\n    state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null\r\n    }; \r\n     \r\n    // On file select (from the pop up) \r\n    onFileChange = event => { \r\n      // Update the state \r\n      this.setState({ selectedFile: event.target.files[0] }); \r\n    }; \r\n     \r\n    // On file upload (click the upload button) \r\n    onFileUpload = () => { \r\n      // Create an object of formData \r\n      const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"myFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name \r\n      ); \r\n     \r\n      // Details of the uploaded file \r\n      console.log(this.state.selectedFile); \r\n     \r\n      // Request made to the backend api \r\n      // Send formData object \r\n    }; \r\n     \r\n    // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Choose before Pressing the Upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() { \r\n      return ( \r\n        <div> \r\n            <h1> \r\n              GeeksforGeeks \r\n            </h1> \r\n            <h3> \r\n              File Upload using React! \r\n            </h3> \r\n            <div> \r\n                <input type=\"file\" onChange={this.onFileChange} /> \r\n                <button onClick={this.onFileUpload}> \r\n                  Upload! \r\n                </button> \r\n            </div> \r\n          {this.fileData()} \r\n        </div> \r\n      ); \r\n    } \r\n  } \r\n  \r\n  export default UploadFile; \r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n\r\n// function UploadFile() {\r\n//   const { register, handleSubmit } = useForm() \r\n\r\n//   const onSubmit = (data) => {\r\n//     console.log(data)\r\n//   }\r\n\r\n//   return (\r\n//      <form onSubmit={handleSubmit(onSubmit)}>\r\n//       <input {...register('value_name') } type=\"file\" name=\"picture\" />\r\n//       <button>Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default UploadFile;"]},"metadata":{},"sourceType":"module"}