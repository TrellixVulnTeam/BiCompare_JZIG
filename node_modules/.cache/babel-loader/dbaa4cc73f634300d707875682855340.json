{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Desktop\\\\sadna\\\\BiCompare\\\\src\\\\components\\\\upload\\\\UploadFileCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dropzone from 'react-dropzone';\nimport { AttachFile, Description, PictureAsPdf } from '@material-ui/icons';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReactFileReader from 'react-file-reader';\nimport { Box, FormControlLabel, CardHeader, Divider, Grid, TextField, Select, MenuItem, FormControl, InputLabel, Checkbox } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CompanySelect from '../dashboard/CompanyPicker';\nimport { useDropzone } from 'react-dropzone';\nimport MyDropZone from './MyDropZone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 14\n  }\n});\nexport default function UploadFileCard() {\n  _s();\n\n  const classes = useStyles();\n\n  const handleFiles = files => {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      // Use reader.result\n      console.log(reader);\n      console.log(reader.result);\n    };\n\n    reader.readAsText(files[0]);\n  };\n\n  const handlePreviewIcon = (fileObject, classes) => {\n    const {\n      type\n    } = fileObject.file;\n    const iconProps = {\n      className: classes.image\n    };\n\n    switch (type) {\n      case \"application/msword\":\n      case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n        return /*#__PURE__*/_jsxDEV(Description, { ...iconProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }, this);\n\n      case \"application/pdf\":\n        return /*#__PURE__*/_jsxDEV(PictureAsPdf, { ...iconProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(AttachFile, { ...iconProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }, this);\n    }\n  };\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone();\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      color: \"whitesmoke\",\n      bgcolor: \"info.main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 11,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            paddingLeft: \"1%\",\n            variant: \"h2\",\n            component: \"h2\",\n            children: \"Upload file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          justifySelf: \"flex-end\",\n          lg: 1,\n          children: /*#__PURE__*/_jsxDEV(PublishIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"standard-required\",\n            label: \"year\",\n            placeholder: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          marginTop: 1,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              style: {\n                width: \"100px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 10,\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 20,\n                children: \"February\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 30,\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 30,\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          marginTop: 2,\n          lg: 1,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              disabled: true,\n              checked: false,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 22\n            }, this),\n            label: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          marginTop: 2,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: \"false\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 22\n            }, this),\n            label: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(MyDropZone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n                className: 'dropzone'\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag 'n' drop some files here, or click to select files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: files\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: \"No files uploaded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(ReactFileReader, {\n        handleFiles: handleFiles,\n        fileTypes: '.csv',\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadFileCard, \"Gid3ivEi8ahtQEjk59vGk8r3Fjo=\", false, function () {\n  return [useStyles, useDropzone];\n});\n\n_c = UploadFileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileCard\");","map":{"version":3,"sources":["C:/Users/Dani/Desktop/sadna/BiCompare/src/components/upload/UploadFileCard.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Dropzone","AttachFile","Description","PictureAsPdf","DropzoneArea","Button","Typography","ReactFileReader","Box","FormControlLabel","CardHeader","Divider","Grid","TextField","Select","MenuItem","FormControl","InputLabel","Checkbox","PublishIcon","CompanySelect","useDropzone","MyDropZone","useStyles","root","minWidth","title","fontSize","UploadFileCard","classes","handleFiles","files","reader","FileReader","onload","e","console","log","result","readAsText","handlePreviewIcon","fileObject","type","file","iconProps","className","image","acceptedFiles","getRootProps","getInputProps","map","path","size","formControl","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Dropzone from 'react-dropzone'\r\nimport { AttachFile, Description, PictureAsPdf } from '@material-ui/icons';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactFileReader from 'react-file-reader';\r\nimport { Box, FormControlLabel, CardHeader, Divider, Grid, TextField, Select,MenuItem,FormControl,InputLabel, Checkbox   } from '@material-ui/core';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport CompanySelect from '../dashboard/CompanyPicker';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport MyDropZone from './MyDropZone';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  \r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n \r\n});\r\n\r\nexport default function UploadFileCard() {\r\n  const classes = useStyles();\r\n\r\n  const handleFiles = (files) => {\r\n      var reader = new FileReader();\r\n      reader.onload = function(e) {\r\n          // Use reader.result\r\n          console.log(reader)\r\n          console.log(reader.result)\r\n      }\r\n      reader.readAsText(files[0]);\r\n  }\r\n\r\n  const handlePreviewIcon = (fileObject, classes) => {\r\n  const {type} = fileObject.file\r\n  const iconProps = {\r\n    className : classes.image,\r\n  }\r\n\r\n\r\n  switch (type) {\r\n    case \"application/msword\":\r\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n      return <Description {...iconProps} />\r\n    case \"application/pdf\":\r\n      return <PictureAsPdf {...iconProps} />\r\n    default:\r\n      return <AttachFile {...iconProps} />\r\n  }\r\n}\r\n\r\nconst {acceptedFiles, getRootProps, getInputProps} = useDropzone();\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n\r\n  return (\r\n    <Card >\r\n      <Box color=\"whitesmoke\" bgcolor=\"info.main\">\r\n        <Grid container>\r\n          <Grid item lg={11}>\r\n            <Typography paddingLeft='1%' variant=\"h2\" component=\"h2\">\r\n              Upload file\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item justifySelf=\"flex-end\" lg={1}>\r\n            <PublishIcon fontSize=\"large\"/>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Box>\r\n      <CardContent>\r\n        <Grid container spacing={3}>\r\n          {/* <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\r\n            {({getRootProps, getInputProps}) => (\r\n              <section>\r\n                <div {...getRootProps()}>\r\n                  <input {...getInputProps()} />\r\n                  <p>Drag 'n' drop some files here, or click to select files</p>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone> */}\r\n          <Grid item lg={3}>\r\n            <TextField required id=\"standard-required\" label=\"year\" placeholder=\"2021\" />\r\n          </Grid>\r\n          <Grid item marginTop={1} lg={2}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Month</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{width:\"100px\"}}\r\n              >\r\n                <MenuItem value={10}>January</MenuItem>\r\n                <MenuItem value={20}>February</MenuItem>\r\n                <MenuItem value={30}>March</MenuItem>\r\n                <MenuItem value={30}>March</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </Grid>\r\n          <Grid item marginTop={2} lg={1}>\r\n            <FormControlLabel\r\n            control={<Checkbox disabled checked={false} color=\"primary\"/>}\r\n            label=\"Update\"\r\n            />\r\n          </Grid>\r\n           <Grid item marginTop={2} lg={2}>\r\n            <FormControlLabel\r\n            control={<Checkbox checked={\"false\"} color=\"primary\"/>}\r\n            label=\"New\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            {/* <DropzoneArea getPreviewIcon={handlePreviewIcon}/> */}\r\n            <MyDropZone/>\r\n            <section className=\"container\">\r\n              <div {...getRootProps({className: 'dropzone'})}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n              </div>\r\n              <aside>\r\n                <h4>Files</h4>\r\n                <ul>{files}</ul>\r\n              </aside>\r\n          </section>\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              No files uploaded\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n          <ReactFileReader handleFiles={handleFiles} fileTypes={'.csv'}>\r\n            <Button className='btn'>Upload</Button>\r\n          </ReactFileReader>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n \r\n"]},"metadata":{},"sourceType":"module"}