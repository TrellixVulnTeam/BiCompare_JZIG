{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Desktop\\\\sadna\\\\BiCompare\\\\src\\\\components\\\\upload\\\\UploadFileCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { AttachFile, Description, PictureAsPdf } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReactFileReader from 'react-file-reader';\nimport { Box, FormControlLabel, CardHeader, Divider, Grid, TextField, Select, MenuItem, FormControl, InputLabel, Checkbox } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { useDropzone } from 'react-dropzone';\nimport MyDropZone from './MyDropZone';\nimport { useEffect, useState } from 'react';\nimport { element } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 14\n  }\n});\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport default function UploadFileCard({\n  setIsUpdate,\n  setIsNew,\n  setFile\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [fileName, setFileName] = useState('');\n  const [isFileValid, setIsFileValid] = useState(true);\n  const [month, setMonth] = useState('');\n  const [uploadType, setUploadType] = useState('');\n  const [isRequiredNotFilled, setIsRequiredNotFilled] = useState(true);\n  const [year, setYear] = useState(undefined);\n  useEffect(() => {}, [fileName]);\n\n  const renderFileName = () => {\n    if (isFileValid) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"red\",\n        gutterBottom: true,\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  const handleMonthChange = async event => {\n    await setMonth(event.target.value);\n    validateRequiredFields();\n  };\n\n  const handleUploadType = event => {\n    setUploadType(event.target.value);\n    validateRequiredFields();\n  };\n\n  const handleUploadClick = () => {};\n\n  const handleYear = event => {\n    const is4Digits = /^\\d{4}$/.test(event.target.value); // true if there ar 4 digits\n\n    if (is4Digits) {\n      setYear(event.target.value);\n      validateRequiredFields();\n    }\n  };\n\n  const validateRequiredFields = () => {\n    if (month !== '' && year != undefined && uploadType !== '') {\n      setIsRequiredNotFilled(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      color: \"whitesmoke\",\n      bgcolor: \"info.main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 11,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            paddingLeft: \"1%\",\n            variant: \"h2\",\n            component: \"h2\",\n            children: \"Upload file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          justifySelf: \"flex-end\",\n          lg: 1,\n          children: /*#__PURE__*/_jsxDEV(PublishIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleYear,\n            type: \"number\",\n            id: \"standard-required\",\n            label: \"year\",\n            placeholder: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          marginTop: 1,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              style: {\n                width: \"100px\"\n              },\n              onChange: handleMonthChange,\n              children: months.map((element, i) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: element,\n                  children: element\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 30\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          marginTop: 1,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Upload type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              style: {\n                width: \"110px\"\n              },\n              onChange: handleUploadType,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"new\",\n                children: \"New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"update\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(MyDropZone, {\n            setFile: setFile,\n            setIsFileValid: setIsFileValid,\n            setFileName: setFileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 12,\n          children: renderFileName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isRequiredNotFilled,\n        onClick: handleUploadClick,\n        className: \"btn\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadFileCard, \"c01tYfF3g4oW/h+C8YkUjI+yKS8=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadFileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileCard\");","map":{"version":3,"sources":["C:/Users/Dani/Desktop/sadna/BiCompare/src/components/upload/UploadFileCard.js"],"names":["React","makeStyles","Card","CardActions","CardContent","AttachFile","Description","PictureAsPdf","Button","Typography","ReactFileReader","Box","FormControlLabel","CardHeader","Divider","Grid","TextField","Select","MenuItem","FormControl","InputLabel","Checkbox","PublishIcon","useDropzone","MyDropZone","useEffect","useState","element","useStyles","root","minWidth","title","fontSize","months","UploadFileCard","setIsUpdate","setIsNew","setFile","classes","fileName","setFileName","isFileValid","setIsFileValid","month","setMonth","uploadType","setUploadType","isRequiredNotFilled","setIsRequiredNotFilled","year","setYear","undefined","renderFileName","handleMonthChange","event","target","value","validateRequiredFields","handleUploadType","handleUploadClick","handleYear","is4Digits","test","formControl","width","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { AttachFile, Description, PictureAsPdf } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactFileReader from 'react-file-reader';\r\nimport { Box, FormControlLabel, CardHeader, Divider, Grid, TextField, Select,MenuItem,FormControl,InputLabel, Checkbox   } from '@material-ui/core';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport MyDropZone from './MyDropZone';\r\nimport { useEffect,useState } from 'react';\r\nimport { element } from 'prop-types';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  \r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n \r\n});\r\n\r\nconst months=  [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nexport default function UploadFileCard({setIsUpdate, setIsNew, setFile}) {\r\n  const classes = useStyles();\r\n  const [fileName, setFileName] = useState('')\r\n  const [isFileValid, setIsFileValid] = useState(true)\r\n  const [month, setMonth] = useState('')\r\n  const [uploadType, setUploadType] = useState('')\r\n  const [isRequiredNotFilled, setIsRequiredNotFilled] = useState(true)\r\n  const [year, setYear] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n    }, [fileName])\r\n\r\n\r\n const renderFileName = () =>{\r\n  if(isFileValid) {\r\n    return(\r\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                {fileName}\r\n        </Typography>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <Typography className={classes.title} color=\"red\" gutterBottom>\r\n                {fileName}\r\n        </Typography>\r\n    )\r\n  }\r\n }\r\n\r\n const handleMonthChange = async (event) => {\r\n   await setMonth(event.target.value)\r\n    validateRequiredFields()\r\n  };\r\n\r\n  const handleUploadType = (event) =>{\r\n    setUploadType(event.target.value)\r\n    validateRequiredFields()\r\n  }\r\n\r\n  const handleUploadClick = ()=>{\r\n    \r\n  }\r\n\r\n  const handleYear = (event)=>{\r\n    const is4Digits = /^\\d{4}$/.test(event.target.value); // true if there ar 4 digits\r\n    if(is4Digits){\r\n      setYear(event.target.value)\r\n      validateRequiredFields()\r\n    }\r\n  }\r\n\r\n  const validateRequiredFields = ()=>{\r\n    if(month !== '' && year !=undefined && uploadType !==''){\r\n      setIsRequiredNotFilled(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card >\r\n      <Box color=\"whitesmoke\" bgcolor=\"info.main\">\r\n        <Grid container>\r\n          <Grid item lg={11}>\r\n            <Typography paddingLeft='1%' variant=\"h2\" component=\"h2\">\r\n              Upload file\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item justifySelf=\"flex-end\" lg={1}>\r\n            <PublishIcon fontSize=\"large\"/>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Box>\r\n      <CardContent>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3}>\r\n            <TextField onChange={handleYear}  type=\"number\" id=\"standard-required\" label=\"year\" placeholder=\"2021\" />\r\n          </Grid>\r\n          <Grid item marginTop={1} lg={2}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Month</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{width:\"100px\"}}\r\n                onChange={handleMonthChange}\r\n              >\r\n                {months.map((element,i) => {\r\n                      return <MenuItem  key={i} value={element}>{element}</MenuItem>\r\n                    })\r\n                  }\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </Grid>\r\n          <Grid item marginTop={1} lg={2}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Upload type</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{width:\"110px\"}}\r\n                  onChange={handleUploadType}\r\n                >\r\n                <MenuItem  value={\"new\"}>New</MenuItem>\r\n                <MenuItem  value={\"update\"}>Update</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <MyDropZone setFile={setFile} setIsFileValid={setIsFileValid} setFileName={setFileName}/>\r\n          \r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            {renderFileName()}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n            <Button disabled={isRequiredNotFilled} onClick={handleUploadClick} className='btn'>Upload</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n \r\n"]},"metadata":{},"sourceType":"module"}