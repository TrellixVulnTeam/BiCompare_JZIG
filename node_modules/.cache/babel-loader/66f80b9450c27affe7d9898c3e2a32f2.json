{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Desktop\\\\sadna\\\\BiCompare\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Helmet } from 'react-helmet';\nimport { Box, Container, Grid, Typography, makeStyles } from '@material-ui/core';\nimport ShippingByDay from \"src/components/dashboard/ShippingByDay\";\nimport ShippingDyDate from \"src/components/dashboard/ShippingByDate\";\nimport CompanyPicker from \"src/components/dashboard/CompanyPicker\";\nimport ShippingByPostalCode from \"src/components/dashboard/ShippingByPostalCode\";\nimport ShippingByDestination from \"src/components/dashboard/ShippingByDestination\";\nimport TotalDeliveries from \"../components/dashboard/TotalDeliveries\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pickers: {\n    marginTop: 50\n  }\n}));\nlet arr = [];\n\nconst Dashboard = () => {\n  _s();\n\n  const classes = useStyles();\n  const [firstCompanyName, setFirstCompanyName] = useState(\"\");\n  const [secondCompanyName, setSecondCompanyName] = useState(\"\");\n  const [firstCompanyData, setFirstCompanyData] = useState({});\n  const [secondCompanyData, setSecondCompanyData] = useState({});\n  const [companies, setCompanies] = useState([]);\n  const [totalDeliveries, setTotalDeliveries] = useState([]);\n\n  const getData = async (companyName, setData) => {\n    let res = await fetch(`http://localhost:8000/${companyName}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    res = await res.json();\n    setData(res); // setTotalDeliveries([res[companyName].totalDeliveries, res[companyName].totalDeliveries])\n\n    return res;\n  };\n\n  const getCompanies = async () => {\n    let res = await fetch(`http://localhost:8000/db`);\n    res = await res.json();\n    let resCompanies = Object.keys(res);\n    setCompanies(resCompanies);\n  };\n  /*\r\n  \r\n  useEffect(() => {\r\n    const asyncUseEffect = async () => {\r\n      let res = await fetch(`http://localhost:8000/db`)\r\n      res = await res.json()\r\n      res = Object.keys(res)\r\n      setAvailableCompanies(res)\r\n    }\r\n      asyncUseEffect()\r\n  }, [])\r\n  */\n\n\n  useEffect(() => {\n    const data = getData(secondCompanyName, setSecondCompanyData);\n    console.log(data);\n  }, [secondCompanyName]);\n  useEffect(() => {\n    getData(firstCompanyName, setFirstCompanyData);\n  }, [firstCompanyName]);\n  useEffect(() => {\n    getCompanies();\n    test();\n  }, []);\n\n  const test = async () => {\n    let res = await fetch(`http://localhost:9090/api/data/1122332211/2020/10/DHL`);\n    res = await res.json();\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              paddingTop: 3,\n              paddingLeft: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 2,\n              md: 3,\n              xl: 2,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"First company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CompanyPicker, {\n                companies: companies.filter(company => {\n                  return secondCompanyName !== company;\n                }),\n                setCompanyName: setFirstCompanyName,\n                companyName: firstCompanyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 2,\n              md: 3,\n              xl: 2,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Second company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CompanyPicker, {\n                companies: companies.filter(company => {\n                  return firstCompanyName !== company;\n                }),\n                setCompanyName: setSecondCompanyName,\n                companyName: secondCompanyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 8,\n            md: 12,\n            xl: 9,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ShippingByDay, {\n              data1: firstCompanyData.shippingByDayOfWeek || [],\n              data2: secondCompanyData.shippingByDayOfWeek || []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 6,\n            xl: 3,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TotalDeliveries, {\n              companies: [firstCompanyName, secondCompanyName],\n              totalDeliveries: [firstCompanyData.totalDeliveries, secondCompanyData.totalDeliveries],\n              sx: {\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 4,\n            xl: 4,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(ShippingDyDate, {\n              data1: firstCompanyData,\n              data2: secondCompanyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 4,\n            xl: 4,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(ShippingByPostalCode, {\n              data1: firstCompanyData,\n              data2: secondCompanyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 4,\n            xl: 4,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(ShippingByDestination, {\n              data1: firstCompanyData,\n              data2: secondCompanyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"p7bZqa7TCOJhmi7gxTEOI/ZpSe0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Dani/Desktop/sadna/BiCompare/src/pages/Dashboard.js"],"names":["Helmet","Box","Container","Grid","Typography","makeStyles","ShippingByDay","ShippingDyDate","CompanyPicker","ShippingByPostalCode","ShippingByDestination","TotalDeliveries","useEffect","useState","useStyles","theme","pickers","marginTop","arr","Dashboard","classes","firstCompanyName","setFirstCompanyName","secondCompanyName","setSecondCompanyName","firstCompanyData","setFirstCompanyData","secondCompanyData","setSecondCompanyData","companies","setCompanies","totalDeliveries","setTotalDeliveries","getData","companyName","setData","res","fetch","headers","json","getCompanies","resCompanies","Object","keys","data","console","log","test","backgroundColor","minHeight","py","paddingTop","paddingLeft","filter","company","shippingByDayOfWeek","height"],"mappings":"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","sourcesContent":["import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ShippingByDay from \"src/components/dashboard/ShippingByDay\";\r\nimport ShippingDyDate from \"src/components/dashboard/ShippingByDate\";\r\nimport CompanyPicker from \"src/components/dashboard/CompanyPicker\"\r\nimport ShippingByPostalCode from \"src/components/dashboard/ShippingByPostalCode\"\r\nimport ShippingByDestination from \"src/components/dashboard/ShippingByDestination\"\r\nimport TotalDeliveries from \"../components/dashboard/TotalDeliveries\"\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pickers: {\r\n    marginTop: 50\r\n  },\r\n}));\r\nlet arr=[]\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles()\r\n  const [firstCompanyName, setFirstCompanyName] = useState(\"\")\r\n  const [secondCompanyName, setSecondCompanyName] = useState(\"\")\r\n  const [firstCompanyData, setFirstCompanyData] = useState({})\r\n  const [secondCompanyData, setSecondCompanyData] = useState({})\r\n  const [companies, setCompanies] = useState([])\r\n  const [totalDeliveries, setTotalDeliveries] = useState([])\r\n\r\n\r\n  const getData = async (companyName, setData) => {\r\n    let res = await fetch(`http://localhost:8000/${companyName}`,{headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n      })\r\n    res = await res.json()\r\n    setData(res)\r\n    // setTotalDeliveries([res[companyName].totalDeliveries, res[companyName].totalDeliveries])\r\n    return res\r\n  }\r\n\r\n  const getCompanies = async () =>{\r\n    let res = await fetch(`http://localhost:8000/db`)\r\n    res = await res.json()\r\n    let resCompanies= Object.keys(res)\r\n    setCompanies(resCompanies)\r\n  }\r\n  /*\r\n\r\n\r\n  useEffect(() => {\r\n    const asyncUseEffect = async () => {\r\n      let res = await fetch(`http://localhost:8000/db`)\r\n      res = await res.json()\r\n      res = Object.keys(res)\r\n      setAvailableCompanies(res)\r\n    }\r\n\r\n    asyncUseEffect()\r\n  }, [])\r\n  */\r\n\r\n  useEffect(() => {\r\n    const data = getData(secondCompanyName, setSecondCompanyData)\r\n    console.log(data)\r\n  }, [secondCompanyName])\r\n\r\n  useEffect(() => {\r\n    getData(firstCompanyName, setFirstCompanyData)\r\n  }, [firstCompanyName])\r\n\r\n  useEffect(() => {\r\n      getCompanies()\r\n      test()\r\n        \r\n  }, [])\r\n  const test = async ()=>{\r\n    let res = await fetch(`http://localhost:9090/api/data/1122332211/2020/10/DHL`)\r\n    res = await res.json()\r\n    console.log(res)\r\n  }\r\n  return (<>\r\n      <Helmet>\r\n        <title>Dashboard</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              container \r\n              spacing={3}\r\n              sx={{paddingTop: 3, paddingLeft: 3}}\r\n            >\r\n              <Grid\r\n              item\r\n              lg={2}\r\n              md={3}\r\n              xl={2}\r\n              xs={4}\r\n              >\r\n                <Typography variant='h6'>First company:</Typography>\r\n                <CompanyPicker   companies={companies.filter((company)=>{return secondCompanyName !==company})} setCompanyName={setFirstCompanyName} companyName={firstCompanyName}/>\r\n              </Grid>\r\n              <Grid \r\n              item\r\n              lg={2}\r\n              md={3}\r\n              xl={2}\r\n              xs={4}\r\n              >\r\n                <Typography variant='h6'>Second company:</Typography>\r\n                <CompanyPicker companies={companies.filter((company)=>{return firstCompanyName !==company})} setCompanyName={setSecondCompanyName} companyName={secondCompanyName}/>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={8}\r\n              md={12}\r\n              xl={9}\r\n              xs={12}\r\n            >\r\n              <ShippingByDay data1={firstCompanyData.shippingByDayOfWeek || []} data2={secondCompanyData.shippingByDayOfWeek || []} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <TotalDeliveries companies={[firstCompanyName,secondCompanyName]} totalDeliveries={[firstCompanyData.totalDeliveries, secondCompanyData.totalDeliveries]} sx={{ height: '100%' }} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              xl={4}\r\n              xs={4}\r\n            >\r\n              <ShippingDyDate data1={firstCompanyData} data2={secondCompanyData}/>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              xl={4}\r\n              xs={4}\r\n            >\r\n              <ShippingByPostalCode data1={firstCompanyData} data2={secondCompanyData}/>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              xl={4}\r\n              xs={4}\r\n            >\r\n              <ShippingByDestination data1={firstCompanyData} data2={secondCompanyData}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}